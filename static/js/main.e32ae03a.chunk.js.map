{"version":3,"sources":["redux/constant.js","redux/store.js","redux/count_reducer.js","redux/count_action.js","components/Count/index.jsx","App.jsx","index.js"],"names":["INCREMENT","DECREMENT","createStore","preState","action","console","log","type","data","applyMiddleware","thunk","createIncrementAction","createDecrementAction","createIncrementAsyncAction","time","dispatch","setTimeout","Count","state","count","increment","value","selectNumber","store","decrement","incrementIfOdd","getState","incrementAsync","ref","c","onClick","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"+LAEaA,EAAY,YACZC,EAAY,Y,YCSVC,eCNA,WAAiD,IAA3BC,EAA0B,uDAD7C,EACsCC,EAAO,uCAC3DC,QAAQC,IAAIH,EAASC,GADsC,IAGpDG,EAAaH,EAAbG,KAAKC,EAAQJ,EAARI,KAGZ,OAAOD,GACH,KAAKP,EAED,OADAK,QAAQC,IAAI,IAAIH,GACTA,EAASK,EACpB,KAAKP,EACD,OAAOE,EAASK,EACpB,QACI,OAAOL,KDPqBM,YAAgBC,MEP3CC,EAAwB,SAAAH,GAAI,MAAK,CAACD,KAAKP,EAAUQ,SACjDI,EAAwB,SAAAJ,GAAI,MAAK,CAACD,KAAKN,EAAUO,SAIjDK,EAA6B,SAACL,EAAKM,GAC5C,OAAO,SAACC,GACJV,QAAQC,IAAI,8BACZU,YAAW,WACPD,EAASJ,EAAsBH,MACjCM,K,OCLWG,E,4MAEjBC,MAAQ,CAACC,MAAM,G,EAWfC,UAAY,WACRf,QAAQC,IAAI,aADE,IAEPe,EAAS,EAAKC,aAAdD,MACPE,EAAMR,SAASJ,EAA4B,EAANU,K,EAIzCG,UAAY,WACRnB,QAAQC,IAAI,aADE,IAEPe,EAAS,EAAKC,aAAdD,MACPE,EAAMR,SAASH,EAA4B,EAANS,K,EAIzCI,eAAiB,WACbpB,QAAQC,IAAI,kBADO,IAEZe,EAAS,EAAKC,aAAdD,MACOE,EAAMG,WACR,IAAM,GACdH,EAAMR,SAASJ,EAA4B,EAANU,K,EAK7CM,eAAiB,WACbtB,QAAQC,IAAI,kBADO,IAEZe,EAAS,EAAKC,aAAdD,MAEHE,EAAMR,SAASF,EAAiC,EAANQ,EAAQ,O,4CAI1D,WAAU,IAAD,OACL,OACI,gCACI,uEAAYE,EAAMG,cAClB,yBAAQE,IAAK,SAAAC,GAAC,OAAI,EAAKP,aAAeO,GAAtC,UACI,wBAAQR,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBALR,OAOI,wBAAQS,QAASC,KAAKX,UAAtB,eAPJ,OAQI,wBAAQU,QAASC,KAAKP,UAAtB,eARJ,OASI,wBAAQM,QAASC,KAAKN,eAAtB,oEATJ,OAUI,wBAAQK,QAASC,KAAKJ,eAAtB,gCAVJ,c,GA/CuBK,aCPdC,E,4JACnB,WACE,OACE,8BACE,cAAC,EAAD,U,GAJyBD,aCEjCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bf,EAAMgB,WAAU,WACdL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,c","file":"static/js/main.e32ae03a.chunk.js","sourcesContent":["// 該模塊是用於定義action對象中type類型的常量值\r\n\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'","// 該文件專門用於暴露一個store對象，整個應用只有一個store對象\r\n\r\n// 引入createStore，專門用於創建redux中最為核心的store對象\r\nimport {applyMiddleware, createStore} from 'redux'\r\n\r\n// 引入為Count組件服務的reducer\r\nimport countReducer from './count_reducer'\r\n\r\n// 引入redux-thunk，用於支持異步action\r\nimport thunk from 'redux-thunk'\r\n\r\n// 暴露store\r\nexport default createStore(countReducer,applyMiddleware(thunk))","// 1. 該文件是用於創建一個為Count組件服務的reducer，reducer的本質就是一個函數\r\n// 2. reducer函數會接到兩個參數，分別為：之前的狀態(preState)，動作對象(action)\r\n\r\nimport {INCREMENT,DECREMENT} from './constant'\r\n\r\nconst initState = 0;\r\nexport default function countReducer(preState=initState,action){\r\n    console.log(preState,action);\r\n    // 從action對象中獲取： type、date\r\n    const {type,data} = action;\r\n\r\n    // 根據type決定如何加工數據\r\n    switch(type){\r\n        case INCREMENT: // 如果是加\r\n            console.log(\"@\",preState);\r\n            return preState+data\r\n        case DECREMENT: // 如果是減\r\n            return preState-data\r\n        default:\r\n            return preState\r\n    }\r\n}","// 該文件專門為Count組件生成acton對象\r\n\r\nimport {INCREMENT,DECREMENT} from './constant' \r\n\r\n// 同步action，就是指action的值為Object類型的一般對象\r\nexport const createIncrementAction = data => ({type:INCREMENT,data})\r\nexport const createDecrementAction = data => ({type:DECREMENT,data})\r\n\r\n// 異步action，就是指action的值為函數\r\n// 異步action中一般都會調用同步action，異步action不是必須要用的\r\nexport const createIncrementAsyncAction = (data,time) =>{\r\n    return (dispatch)=>{\r\n        console.log('createIncrementAsyncAction');\r\n        setTimeout(()=>{\r\n            dispatch(createIncrementAction(data))\r\n        },time)\r\n    }\r\n}","import React, { Component } from 'react'\r\n// 引入store，用於獲取redux中保存狀態\r\nimport store from '../../redux/store'\r\n// 引入actionCreator，專門用於創建action對象\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createIncrementAsyncAction\r\n} from '../../redux/count_action'\r\n\r\nexport default class Count extends Component {\r\n\r\n    state = {count:0}\r\n\r\n    // 組件掛載時\r\n    // componentDidMount(){\r\n    //     // 檢測redux中狀態的變化，只要變化，就調用render\r\n    //     store.subscribe(()=>{\r\n    //         this.setState({});\r\n    //     })\r\n    // }\r\n\r\n    // 加法\r\n    increment = () => {\r\n        console.log('increment');\r\n        const {value} = this.selectNumber;\r\n        store.dispatch(createIncrementAction(value*1));\r\n    }\r\n\r\n    // 減法\r\n    decrement = () => {\r\n        console.log('decrement');\r\n        const {value} = this.selectNumber;\r\n        store.dispatch(createDecrementAction(value*1));\r\n    }\r\n\r\n    // 奇數再加\r\n    incrementIfOdd = () => {\r\n        console.log('incrementIfOdd');\r\n        const {value} = this.selectNumber;\r\n        const count = store.getState();\r\n        if (count % 2 !== 0) {\r\n            store.dispatch(createIncrementAction(value*1));\r\n        }\r\n    }\r\n\r\n    // 異步加法\r\n    incrementAsync = () => {\r\n        console.log('incrementAsync');\r\n        const {value} = this.selectNumber;\r\n        //setTimeout(()=>{\r\n            store.dispatch(createIncrementAsyncAction(value*1,500));\r\n        //},500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>當前求和為： {store.getState()}</h1>\r\n                <select ref={c => this.selectNumber = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;\r\n                <button onClick={this.incrementIfOdd}>當前求和為奇數再加</button>&nbsp;\r\n                <button onClick={this.incrementAsync}>異步加</button>&nbsp;\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Count from './components/Count'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Count/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nstore.subscribe(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})"],"sourceRoot":""}